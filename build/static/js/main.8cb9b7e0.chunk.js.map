{"version":3,"sources":["code/TimeNowFeature/TimeNow.js","code/TimerFeature/TimerForm.js","code/TimerFeature/Notification.js","code/TimerFeature/Orb.js","code/TimerFeature/TimerDisplay.js","code/TimerFeature/TimeFromForm.js","code/TimerFeature/Timer.js","code/base/Clock.js","code/base/Clock_options_list.js","App.js","serviceWorker.js","index.js"],"names":["TimeNow","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","time","generateTime","Date","hour","getHours","mins","getMinutes","sec","getSeconds","concat","_this2","timer","setInterval","tick","clearInterval","setState","react_default","a","createElement","id","Component","TimerForm","_ref","handleForm","onSubmit","type","name","required","value","timerNotification","msg","options","body","requireInteraction","vibrate","window","Notification","permission","requestPermission","then","alert","Orb","props","console","log","totalTime","totalHeight","innerHeight","timeNow","move","document","getElementById","style","top","TimerDisplay","readable_time","currentTime","difference","hours","Math","floor","minutes","seconds","check_complete","change","complete","output","till","now","TimerFeature_Orb","TimeFromForm","endTime","start","from","getTime","convertToUTCTime","formTime","setHours","get_hours","setMinutes","get_mins","setSeconds","setMilliseconds","string","parseInt","split","splice","join","Timer","event","preventDefault","timeTill","timer_set","set_timer_times","bool","set","TimerFeature_TimerDisplay","TimerFeature_TimerForm","Clock","mode","TimeNowFeature_TimeNow","TimerFeature_Timer","ClockOptionsList","onClick","ChangeMode","App","className","Clock_options_list","base_Clock","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8cb9b7e0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TimeNow extends Component {\n    constructor(){\n        super()\n        this.state = {\n            time : this.generateTime()\n        }\n    }\n\n    generateTime(){\n        const time = new Date();\n        const hour = time.getHours();\n        const mins = time.getMinutes();\n        const sec = time.getSeconds();\n        return `${hour}:${mins}:${sec}`\n    }\n\n    componentDidMount(){\n        this.timer = setInterval( ()=> this.tick(), 1000 );   \n    }\n\n    componentWillUnmount(){\n       clearInterval(this.timer)\n    }\n\n    tick(){\n        this.setState({ time : this.generateTime() })\n    }\n\n    render() {\n        return (\n            <div id='time_now'>\n            <h2>{this.state.time}</h2>\n            </div>\n        )\n    }\n}\n\n export default TimeNow","import React from 'react';\n\nconst TimerForm = ( {handleForm} ) => {\n\n   return (\n        <form  onSubmit={ handleForm } >\n            <label>work until</label>\n            <hr/>\n            <input type='time' id ='time_till' name='time_till' required ></input>\n            <br/>\n            <br/>\n            <input \n                id ='submit_form'\n                type=\"submit\" \n                value=\"Submit\" \n            /> \n        </form>\n   )\n}\nexport default TimerForm","const timerNotification = (function(msg){\n  \n  var options = {\n      body: 'phew, lets take a breather',\n      requireInteraction: true,\n      vibrate: [200, 100, 200],\n  }\n  if (!(\"Notification\" in window)) {\n    alert(\"This browser does not support desktop notification\");\n  }\n  else if (Notification.permission === \"granted\") {\n    var notification = new Notification(msg,options);\n  }\n  else if (Notification.permission !== \"denied\") {\n    Notification.requestPermission().then(function (permission) {\n      if (permission === \"granted\") {\n        var notification = new Notification(msg,options);\n      }\n    });\n  }\n})\n\nexport default timerNotification","import React, { Component } from 'react';\n\n\nclass Orb extends Component {\n\n    constructor(props){\n        super()\n        console.log(props)\n        this.totalTime = props.state;\n        this.totalHeight = window.innerHeight;\n        // this.move(props.change)\n    }\n\n    move(timeNow){\n        let move = (timeNow / this.totalTime) * 100\n        document.getElementById('orb').style.top=`${100-move}%`\n    }\n\n    render(){\n        return <div id='orb'></div>\n    }\n}\n\nexport default Orb","import React, { Component } from 'react';\nimport timerNotification from './Notification'\nimport Orb from './Orb'\n\n\n\nclass TimerDisplay extends Component {\n     \n    constructor(props){\n        super()\n        this.state = props.state\n        this.change = props.change\n    }\n  \n    readable_time = () => {\n        if(this.state.currentTime){\n            let difference = this.state.currentTime\n            let hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            let minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n            let seconds = Math.floor((difference % (1000 * 60)) / 1000);\n            this.check_complete(hours,minutes,seconds)\n            return `${hours} : ${minutes} : ${seconds}`;\n        } else {\n            return ` one moment `\n        }\n    };\n\n    check_complete(hours,minutes,seconds){\n        if(hours === 0  && minutes === 0 && seconds === 0){\n            timerNotification('Time is up!')\n            this.setState({complete : true})\n        }\n    }\n\n    tick(){ \n        this.setState({output : this.readable_time()})       \n        let currentTime = this.state.till -  Date.now();\n        this.setState({ currentTime: currentTime })\n\n        if(this.state.complete){\n            this.change(false)\n       }\n\n    }\n   \n  \n    componentDidMount(){\n      \n        this.timer = setInterval( ()=> this.tick(), 1000 );   \n    }\n\n    componentWillUnmount(){\n   \n       clearInterval(this.timer)\n    \n    }\n\n\n    render(){\n        return(\n             <div>\n                <div>{this.state.output}</div>\n                < Orb \n                state={this.state.till}\n                change = {this.state.currentTime}\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default TimerDisplay","class TimeFromForm{\n  \n  constructor(endTime){\n    this.start = new Date();\n    this.from = this.start.getTime();\n    this.till = this.convertToUTCTime(endTime)\n  }\n \n  get timeFrom(){\n    return this.from\n  }\n\n  get timeTill(){\n    return this.till\n  }\n\n  convertToUTCTime(formTime){\n    var endTime = this.start\n    endTime.setHours(this.get_hours(formTime))\n    endTime.setMinutes(this.get_mins(formTime))\n    endTime.setSeconds(0)\n    endTime.setMilliseconds(0)\n    return endTime.getTime()\n  }\n\n  get_hours(string){\n    return parseInt(string.split('').splice(0,2).join(''))\n  }\n  \n  get_mins(string){\n      return parseInt(string.split('').splice(3,2).join(''))\n  }\n}\n\nexport default TimeFromForm","import React, { Component } from 'react';\nimport TimerForm from './TimerForm';\nimport TimerDisplay from './TimerDisplay'\nimport TimeFromForm from './TimeFromForm'\nimport Orb from './Orb'\n\n\n\nclass Timer extends Component{\n   constructor(){\n       super()\n       this.state = {\n           set : false,\n           from : '',\n           till : ''\n       }\n   }\n\n   handleForm = ( event ) => {\n     event.preventDefault();\n     var timeTill = document.getElementById('time_till').value;\n     var timer = new TimeFromForm(timeTill)\n     this.timer_set(true)\n     this.set_timer_times(timer.from, timer.till)\n   }\n\n   timer_set = (bool) => {\n    this.setState({\n      set:bool\n    })\n   }\n\n   set_timer_times = (from, till) => {\n    this.setState({\n      from:from,\n      till:till\n    })\n   }\n   \n   render(){\n      return( \n        <div>\n            { (!this.state.set) ?\n              < TimerForm \n                handleForm={this.handleForm}\n              /> :\n  \n              < TimerDisplay\n                state={this.state}\n                change={this.timer_set}\n              />\n    \n            }\n        </div>\n      )\n   }\n}\n\nexport default Timer","import React from 'react';\nimport TimeNow from '../TimeNowFeature/TimeNow'\nimport Timer from '../TimerFeature/Timer'\n\nconst Clock = ({ mode }) => (\n    <div>\n        <h1> {(mode === 'clock')? 'The Time Is:' : 'Set Timer :'} </h1>\n        { mode === 'clock' && < TimeNow />}\n        { mode === 'timer' && < Timer />}\n    </div>\n)\n    \nexport default Clock","import React from 'react';\n\nconst ClockOptionsList = (props) => {\n    return (\n        <ul>\n            <li><button onClick = { () => props.ChangeMode('clock')} id='clock_mode'>Clock</button></li>\n            <li><button onClick = { () => props.ChangeMode('timer')} id='timer_mode'>Timer</button></li>\n        </ul>\n    )\n}\n\nexport default ClockOptionsList","import React, { Component } from 'react';\n\nimport './App.css';\nimport Clock from './code/base/Clock';\nimport ClockOptionsList from './code/base/Clock_options_list';\n\nclass App extends Component {\n \n  state = {\n    mode : 'clock'\n  }\n\n  ChangeMode = (mode) =>{\n    this.setState({\n      mode: mode\n    })\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        < ClockOptionsList\n          ChangeMode={this.ChangeMode}\n        />\n        < Clock\n          mode={this.state.mode}\n        />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}